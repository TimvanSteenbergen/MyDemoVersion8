// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package appstoreappdemos.proxies;

/**
 * With validations:
 * - Until > From
 */
public class DateTimeRange
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dateTimeRangeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "AppstoreAppDemos.DateTimeRange";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		FromTime("FromTime"),
		UntilTime("UntilTime"),
		Date("Date"),
		Today("Today");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DateTimeRange(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "AppstoreAppDemos.DateTimeRange"));
	}

	protected DateTimeRange(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dateTimeRangeMendixObject)
	{
		if (dateTimeRangeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("AppstoreAppDemos.DateTimeRange", dateTimeRangeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a AppstoreAppDemos.DateTimeRange");

		this.dateTimeRangeMendixObject = dateTimeRangeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DateTimeRange.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static appstoreappdemos.proxies.DateTimeRange initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return appstoreappdemos.proxies.DateTimeRange.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static appstoreappdemos.proxies.DateTimeRange initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new appstoreappdemos.proxies.DateTimeRange(context, mendixObject);
	}

	public static appstoreappdemos.proxies.DateTimeRange load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return appstoreappdemos.proxies.DateTimeRange.initialize(context, mendixObject);
	}

	public static java.util.List<appstoreappdemos.proxies.DateTimeRange> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<appstoreappdemos.proxies.DateTimeRange> result = new java.util.ArrayList<appstoreappdemos.proxies.DateTimeRange>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//AppstoreAppDemos.DateTimeRange" + xpathConstraint))
			result.add(appstoreappdemos.proxies.DateTimeRange.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of FromTime
	 */
	public final java.util.Date getFromTime()
	{
		return getFromTime(getContext());
	}

	/**
	 * @param context
	 * @return value of FromTime
	 */
	public final java.util.Date getFromTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.FromTime.toString());
	}

	/**
	 * Set value of FromTime
	 * @param fromtime
	 */
	public final void setFromTime(java.util.Date fromtime)
	{
		setFromTime(getContext(), fromtime);
	}

	/**
	 * Set value of FromTime
	 * @param context
	 * @param fromtime
	 */
	public final void setFromTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date fromtime)
	{
		getMendixObject().setValue(context, MemberNames.FromTime.toString(), fromtime);
	}

	/**
	 * @return value of UntilTime
	 */
	public final java.util.Date getUntilTime()
	{
		return getUntilTime(getContext());
	}

	/**
	 * @param context
	 * @return value of UntilTime
	 */
	public final java.util.Date getUntilTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.UntilTime.toString());
	}

	/**
	 * Set value of UntilTime
	 * @param untiltime
	 */
	public final void setUntilTime(java.util.Date untiltime)
	{
		setUntilTime(getContext(), untiltime);
	}

	/**
	 * Set value of UntilTime
	 * @param context
	 * @param untiltime
	 */
	public final void setUntilTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date untiltime)
	{
		getMendixObject().setValue(context, MemberNames.UntilTime.toString(), untiltime);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of Today
	 */
	public final java.util.Date getToday()
	{
		return getToday(getContext());
	}

	/**
	 * @param context
	 * @return value of Today
	 */
	public final java.util.Date getToday(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Today.toString());
	}

	/**
	 * Set value of Today
	 * @param today
	 */
	public final void setToday(java.util.Date today)
	{
		setToday(getContext(), today);
	}

	/**
	 * Set value of Today
	 * @param context
	 * @param today
	 */
	public final void setToday(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date today)
	{
		getMendixObject().setValue(context, MemberNames.Today.toString(), today);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dateTimeRangeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final appstoreappdemos.proxies.DateTimeRange that = (appstoreappdemos.proxies.DateTimeRange) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "AppstoreAppDemos.DateTimeRange";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
