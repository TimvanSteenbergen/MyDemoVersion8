// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sprintrapis2.proxies;

/**
 * Copied from https://docs.mendix.com/apidocs-mxsdk/apidocs/deploy-api
 */
public class ScheduledEvent
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject scheduledEventMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SprintrApis2.ScheduledEvent";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Name("Name"),
		DeployedValue("DeployedValue"),
		Value("Value"),
		ScheduledEvent_Settings("SprintrApis2.ScheduledEvent_Settings");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public ScheduledEvent(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SprintrApis2.ScheduledEvent"));
	}

	protected ScheduledEvent(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject scheduledEventMendixObject)
	{
		if (scheduledEventMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SprintrApis2.ScheduledEvent", scheduledEventMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SprintrApis2.ScheduledEvent");

		this.scheduledEventMendixObject = scheduledEventMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'ScheduledEvent.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sprintrapis2.proxies.ScheduledEvent initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sprintrapis2.proxies.ScheduledEvent.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sprintrapis2.proxies.ScheduledEvent initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sprintrapis2.proxies.ScheduledEvent(context, mendixObject);
	}

	public static sprintrapis2.proxies.ScheduledEvent load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sprintrapis2.proxies.ScheduledEvent.initialize(context, mendixObject);
	}

	public static java.util.List<sprintrapis2.proxies.ScheduledEvent> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sprintrapis2.proxies.ScheduledEvent> result = new java.util.ArrayList<sprintrapis2.proxies.ScheduledEvent>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SprintrApis2.ScheduledEvent" + xpathConstraint))
			result.add(sprintrapis2.proxies.ScheduledEvent.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Name
	 */
	public final java.lang.String getName()
	{
		return getName(getContext());
	}

	/**
	 * @param context
	 * @return value of Name
	 */
	public final java.lang.String getName(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Name.toString());
	}

	/**
	 * Set value of Name
	 * @param name
	 */
	public final void setName(java.lang.String name)
	{
		setName(getContext(), name);
	}

	/**
	 * Set value of Name
	 * @param context
	 * @param name
	 */
	public final void setName(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String name)
	{
		getMendixObject().setValue(context, MemberNames.Name.toString(), name);
	}

	/**
	 * @return value of DeployedValue
	 */
	public final java.lang.String getDeployedValue()
	{
		return getDeployedValue(getContext());
	}

	/**
	 * @param context
	 * @return value of DeployedValue
	 */
	public final java.lang.String getDeployedValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.DeployedValue.toString());
	}

	/**
	 * Set value of DeployedValue
	 * @param deployedvalue
	 */
	public final void setDeployedValue(java.lang.String deployedvalue)
	{
		setDeployedValue(getContext(), deployedvalue);
	}

	/**
	 * Set value of DeployedValue
	 * @param context
	 * @param deployedvalue
	 */
	public final void setDeployedValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String deployedvalue)
	{
		getMendixObject().setValue(context, MemberNames.DeployedValue.toString(), deployedvalue);
	}

	/**
	 * @return value of Value
	 */
	public final java.lang.String getValue()
	{
		return getValue(getContext());
	}

	/**
	 * @param context
	 * @return value of Value
	 */
	public final java.lang.String getValue(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Value.toString());
	}

	/**
	 * Set value of Value
	 * @param value
	 */
	public final void setValue(java.lang.String value)
	{
		setValue(getContext(), value);
	}

	/**
	 * Set value of Value
	 * @param context
	 * @param value
	 */
	public final void setValue(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String value)
	{
		getMendixObject().setValue(context, MemberNames.Value.toString(), value);
	}

	/**
	 * @return value of ScheduledEvent_Settings
	 */
	public final sprintrapis2.proxies.Settings getScheduledEvent_Settings() throws com.mendix.core.CoreException
	{
		return getScheduledEvent_Settings(getContext());
	}

	/**
	 * @param context
	 * @return value of ScheduledEvent_Settings
	 */
	public final sprintrapis2.proxies.Settings getScheduledEvent_Settings(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sprintrapis2.proxies.Settings result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.ScheduledEvent_Settings.toString());
		if (identifier != null)
			result = sprintrapis2.proxies.Settings.load(context, identifier);
		return result;
	}

	/**
	 * Set value of ScheduledEvent_Settings
	 * @param scheduledevent_settings
	 */
	public final void setScheduledEvent_Settings(sprintrapis2.proxies.Settings scheduledevent_settings)
	{
		setScheduledEvent_Settings(getContext(), scheduledevent_settings);
	}

	/**
	 * Set value of ScheduledEvent_Settings
	 * @param context
	 * @param scheduledevent_settings
	 */
	public final void setScheduledEvent_Settings(com.mendix.systemwideinterfaces.core.IContext context, sprintrapis2.proxies.Settings scheduledevent_settings)
	{
		if (scheduledevent_settings == null)
			getMendixObject().setValue(context, MemberNames.ScheduledEvent_Settings.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.ScheduledEvent_Settings.toString(), scheduledevent_settings.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return scheduledEventMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sprintrapis2.proxies.ScheduledEvent that = (sprintrapis2.proxies.ScheduledEvent) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SprintrApis2.ScheduledEvent";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
