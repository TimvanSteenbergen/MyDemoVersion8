// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sprintrapis2.proxies;

public class Revision
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject revisionMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "SprintrApis2.Revision";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		Number("Number"),
		CommitMessage("CommitMessage"),
		Author("Author"),
		MendixVersion("MendixVersion"),
		Date("Date"),
		Revision_Branch("SprintrApis2.Revision_Branch");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Revision(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "SprintrApis2.Revision"));
	}

	protected Revision(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject revisionMendixObject)
	{
		if (revisionMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("SprintrApis2.Revision", revisionMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a SprintrApis2.Revision");

		this.revisionMendixObject = revisionMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Revision.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sprintrapis2.proxies.Revision initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sprintrapis2.proxies.Revision.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sprintrapis2.proxies.Revision initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sprintrapis2.proxies.Revision(context, mendixObject);
	}

	public static sprintrapis2.proxies.Revision load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sprintrapis2.proxies.Revision.initialize(context, mendixObject);
	}

	public static java.util.List<sprintrapis2.proxies.Revision> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sprintrapis2.proxies.Revision> result = new java.util.ArrayList<sprintrapis2.proxies.Revision>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//SprintrApis2.Revision" + xpathConstraint))
			result.add(sprintrapis2.proxies.Revision.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of Number
	 */
	public final java.lang.Long getNumber()
	{
		return getNumber(getContext());
	}

	/**
	 * @param context
	 * @return value of Number
	 */
	public final java.lang.Long getNumber(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.Number.toString());
	}

	/**
	 * Set value of Number
	 * @param number
	 */
	public final void setNumber(java.lang.Long number)
	{
		setNumber(getContext(), number);
	}

	/**
	 * Set value of Number
	 * @param context
	 * @param number
	 */
	public final void setNumber(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long number)
	{
		getMendixObject().setValue(context, MemberNames.Number.toString(), number);
	}

	/**
	 * @return value of CommitMessage
	 */
	public final java.lang.String getCommitMessage()
	{
		return getCommitMessage(getContext());
	}

	/**
	 * @param context
	 * @return value of CommitMessage
	 */
	public final java.lang.String getCommitMessage(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.CommitMessage.toString());
	}

	/**
	 * Set value of CommitMessage
	 * @param commitmessage
	 */
	public final void setCommitMessage(java.lang.String commitmessage)
	{
		setCommitMessage(getContext(), commitmessage);
	}

	/**
	 * Set value of CommitMessage
	 * @param context
	 * @param commitmessage
	 */
	public final void setCommitMessage(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String commitmessage)
	{
		getMendixObject().setValue(context, MemberNames.CommitMessage.toString(), commitmessage);
	}

	/**
	 * @return value of Author
	 */
	public final java.lang.String getAuthor()
	{
		return getAuthor(getContext());
	}

	/**
	 * @param context
	 * @return value of Author
	 */
	public final java.lang.String getAuthor(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.Author.toString());
	}

	/**
	 * Set value of Author
	 * @param author
	 */
	public final void setAuthor(java.lang.String author)
	{
		setAuthor(getContext(), author);
	}

	/**
	 * Set value of Author
	 * @param context
	 * @param author
	 */
	public final void setAuthor(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String author)
	{
		getMendixObject().setValue(context, MemberNames.Author.toString(), author);
	}

	/**
	 * @return value of MendixVersion
	 */
	public final java.lang.String getMendixVersion()
	{
		return getMendixVersion(getContext());
	}

	/**
	 * @param context
	 * @return value of MendixVersion
	 */
	public final java.lang.String getMendixVersion(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.MendixVersion.toString());
	}

	/**
	 * Set value of MendixVersion
	 * @param mendixversion
	 */
	public final void setMendixVersion(java.lang.String mendixversion)
	{
		setMendixVersion(getContext(), mendixversion);
	}

	/**
	 * Set value of MendixVersion
	 * @param context
	 * @param mendixversion
	 */
	public final void setMendixVersion(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String mendixversion)
	{
		getMendixObject().setValue(context, MemberNames.MendixVersion.toString(), mendixversion);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of Revision_Branch
	 */
	public final sprintrapis2.proxies.Branch getRevision_Branch() throws com.mendix.core.CoreException
	{
		return getRevision_Branch(getContext());
	}

	/**
	 * @param context
	 * @return value of Revision_Branch
	 */
	public final sprintrapis2.proxies.Branch getRevision_Branch(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sprintrapis2.proxies.Branch result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Revision_Branch.toString());
		if (identifier != null)
			result = sprintrapis2.proxies.Branch.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Revision_Branch
	 * @param revision_branch
	 */
	public final void setRevision_Branch(sprintrapis2.proxies.Branch revision_branch)
	{
		setRevision_Branch(getContext(), revision_branch);
	}

	/**
	 * Set value of Revision_Branch
	 * @param context
	 * @param revision_branch
	 */
	public final void setRevision_Branch(com.mendix.systemwideinterfaces.core.IContext context, sprintrapis2.proxies.Branch revision_branch)
	{
		if (revision_branch == null)
			getMendixObject().setValue(context, MemberNames.Revision_Branch.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Revision_Branch.toString(), revision_branch.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return revisionMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sprintrapis2.proxies.Revision that = (sprintrapis2.proxies.Revision) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "SprintrApis2.Revision";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
