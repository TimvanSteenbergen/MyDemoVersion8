// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package charts.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the Charts module
	public static charts.proxies.Serie dS_Chart_GetOneOrCreate(IContext context, charts.proxies.Enum_BasicChartType _enum_ChartType)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Enum_ChartType", _enum_ChartType == null ? null : _enum_ChartType.name());
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Chart_GetOneOrCreate").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Serie.initialize(context, result);
	}
	public static charts.proxies.Serie dS_Chart_GetOneOrCreate_AreaChart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Chart_GetOneOrCreate_AreaChart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Serie.initialize(context, result);
	}
	public static charts.proxies.Serie dS_Chart_GetOneOrCreate_BarChart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Chart_GetOneOrCreate_BarChart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Serie.initialize(context, result);
	}
	public static charts.proxies.Serie dS_Chart_GetOneOrCreate_Linechart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Chart_GetOneOrCreate_Linechart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Serie.initialize(context, result);
	}
	public static charts.proxies.Serie dS_Chart_GetOneOrCreate_PieChart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Chart_GetOneOrCreate_PieChart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Serie.initialize(context, result);
	}
	public static java.util.List<charts.proxies.DataPoint> dS_ChartData(IContext context, charts.proxies.DataPoint _chartData)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ChartData", _chartData == null ? null : _chartData.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("Charts.DS_ChartData").withParams(params).execute(context);
		java.util.List<charts.proxies.DataPoint> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(charts.proxies.DataPoint.initialize(context, obj));
		}
		return result;
	}
	public static charts.proxies.DataPoint dS_ChartData_GetOneOrCreate(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_ChartData_GetOneOrCreate").withParams(params).execute(context);
		return result == null ? null : charts.proxies.DataPoint.initialize(context, result);
	}
	public static charts.proxies.CJsChart dS_ChartJS_CreateLineChart(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_ChartJS_CreateLineChart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.CJsChart.initialize(context, result);
	}
	public static charts.proxies.CJsChart dS_ChartJS_GetData(IContext context, charts.proxies.CJsChart _chartJs)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("ChartJs", _chartJs == null ? null : _chartJs.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_ChartJS_GetData").withParams(params).execute(context);
		return result == null ? null : charts.proxies.CJsChart.initialize(context, result);
	}
	public static charts.proxies.ChartNP dS_ChartNP_Create(IContext context, java.util.List<charts.proxies.DataPointNP> _chartObjectList01, java.util.List<charts.proxies.DataPointNP> _chartObjectList04, java.util.List<charts.proxies.DataPointNP> _chartObjectList03, java.util.List<charts.proxies.DataPointNP> _chartObjectList02, charts.proxies.SerieNP _serieNP1user, charts.proxies.SerieNP _serieNP2user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_chartObjectList01 = null;
		if (_chartObjectList01 != null)
		{
			listparam_chartObjectList01 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList01)
				listparam_chartObjectList01.add(obj.getMendixObject());
		}
		params.put("ChartObjectList01", listparam_chartObjectList01);

		java.util.ArrayList<IMendixObject> listparam_chartObjectList04 = null;
		if (_chartObjectList04 != null)
		{
			listparam_chartObjectList04 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList04)
				listparam_chartObjectList04.add(obj.getMendixObject());
		}
		params.put("ChartObjectList04", listparam_chartObjectList04);

		java.util.ArrayList<IMendixObject> listparam_chartObjectList03 = null;
		if (_chartObjectList03 != null)
		{
			listparam_chartObjectList03 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList03)
				listparam_chartObjectList03.add(obj.getMendixObject());
		}
		params.put("ChartObjectList03", listparam_chartObjectList03);

		java.util.ArrayList<IMendixObject> listparam_chartObjectList02 = null;
		if (_chartObjectList02 != null)
		{
			listparam_chartObjectList02 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList02)
				listparam_chartObjectList02.add(obj.getMendixObject());
		}
		params.put("ChartObjectList02", listparam_chartObjectList02);

		params.put("SerieNP1user", _serieNP1user == null ? null : _serieNP1user.getMendixObject());
		params.put("SerieNP2user", _serieNP2user == null ? null : _serieNP2user.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_ChartNP_Create").withParams(params).execute(context);
		return result == null ? null : charts.proxies.ChartNP.initialize(context, result);
	}
	public static charts.proxies.Entity dS_Entity_Create(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Entity_Create").withParams(params).execute(context);
		return result == null ? null : charts.proxies.Entity.initialize(context, result);
	}
	public static charts.proxies.ChartNP dS_Linechart_GetDataShowLineChart(IContext context, java.util.List<charts.proxies.DataPointNP> _chartObjectList2, java.util.List<charts.proxies.DataPointNP> _chartObjectList1)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_chartObjectList2 = null;
		if (_chartObjectList2 != null)
		{
			listparam_chartObjectList2 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList2)
				listparam_chartObjectList2.add(obj.getMendixObject());
		}
		params.put("ChartObjectList2", listparam_chartObjectList2);

		java.util.ArrayList<IMendixObject> listparam_chartObjectList1 = null;
		if (_chartObjectList1 != null)
		{
			listparam_chartObjectList1 = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _chartObjectList1)
				listparam_chartObjectList1.add(obj.getMendixObject());
		}
		params.put("ChartObjectList1", listparam_chartObjectList1);

		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Linechart_GetDataShowLineChart").withParams(params).execute(context);
		return result == null ? null : charts.proxies.ChartNP.initialize(context, result);
	}
	public static charts.proxies.ChartNP dS_Linechart_WithDummydata(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.DS_Linechart_WithDummydata").withParams(params).execute(context);
		return result == null ? null : charts.proxies.ChartNP.initialize(context, result);
	}
	public static void sUB_Chart_GetDataAsJSON(IContext context, charts.proxies.Serie _serie)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Serie", _serie == null ? null : _serie.getMendixObject());
		Core.microflowCall("Charts.SUB_Chart_GetDataAsJSON").withParams(params).execute(context);
	}
	public static charts.proxies.SerieNP sUB_Serie_CreatewithDataPoints(IContext context, java.util.List<charts.proxies.DataPointNP> _dataPoint, charts.proxies.ChartNP _chartNP, charts.proxies.SerieNP _serieNP)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		java.util.ArrayList<IMendixObject> listparam_dataPoint = null;
		if (_dataPoint != null)
		{
			listparam_dataPoint = new java.util.ArrayList<>();
			for (charts.proxies.DataPointNP obj : _dataPoint)
				listparam_dataPoint.add(obj.getMendixObject());
		}
		params.put("DataPoint", listparam_dataPoint);

		params.put("ChartNP", _chartNP == null ? null : _chartNP.getMendixObject());
		params.put("SerieNP", _serieNP == null ? null : _serieNP.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("Charts.SUB_Serie_CreatewithDataPoints").withParams(params).execute(context);
		return result == null ? null : charts.proxies.SerieNP.initialize(context, result);
	}
}