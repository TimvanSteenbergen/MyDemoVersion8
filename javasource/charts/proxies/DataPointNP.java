// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package charts.proxies;

public class DataPointNP
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject dataPointNPMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Charts.DataPointNP";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		xlabel("xlabel"),
		x("x"),
		y("y"),
		DateTime("DateTime"),
		DataPointNP_SerieNP("Charts.DataPointNP_SerieNP");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public DataPointNP(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Charts.DataPointNP"));
	}

	protected DataPointNP(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject dataPointNPMendixObject)
	{
		if (dataPointNPMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Charts.DataPointNP", dataPointNPMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Charts.DataPointNP");

		this.dataPointNPMendixObject = dataPointNPMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'DataPointNP.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static charts.proxies.DataPointNP initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return charts.proxies.DataPointNP.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static charts.proxies.DataPointNP initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new charts.proxies.DataPointNP(context, mendixObject);
	}

	public static charts.proxies.DataPointNP load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return charts.proxies.DataPointNP.initialize(context, mendixObject);
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of xlabel
	 */
	public final java.lang.String getxlabel()
	{
		return getxlabel(getContext());
	}

	/**
	 * @param context
	 * @return value of xlabel
	 */
	public final java.lang.String getxlabel(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.xlabel.toString());
	}

	/**
	 * Set value of xlabel
	 * @param xlabel
	 */
	public final void setxlabel(java.lang.String xlabel)
	{
		setxlabel(getContext(), xlabel);
	}

	/**
	 * Set value of xlabel
	 * @param context
	 * @param xlabel
	 */
	public final void setxlabel(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xlabel)
	{
		getMendixObject().setValue(context, MemberNames.xlabel.toString(), xlabel);
	}

	/**
	 * @return value of x
	 */
	public final java.lang.Integer getx()
	{
		return getx(getContext());
	}

	/**
	 * @param context
	 * @return value of x
	 */
	public final java.lang.Integer getx(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.x.toString());
	}

	/**
	 * Set value of x
	 * @param x
	 */
	public final void setx(java.lang.Integer x)
	{
		setx(getContext(), x);
	}

	/**
	 * Set value of x
	 * @param context
	 * @param x
	 */
	public final void setx(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer x)
	{
		getMendixObject().setValue(context, MemberNames.x.toString(), x);
	}

	/**
	 * @return value of y
	 */
	public final java.lang.Integer gety()
	{
		return gety(getContext());
	}

	/**
	 * @param context
	 * @return value of y
	 */
	public final java.lang.Integer gety(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Integer) getMendixObject().getValue(context, MemberNames.y.toString());
	}

	/**
	 * Set value of y
	 * @param y
	 */
	public final void sety(java.lang.Integer y)
	{
		sety(getContext(), y);
	}

	/**
	 * Set value of y
	 * @param context
	 * @param y
	 */
	public final void sety(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Integer y)
	{
		getMendixObject().setValue(context, MemberNames.y.toString(), y);
	}

	/**
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime()
	{
		return getDateTime(getContext());
	}

	/**
	 * @param context
	 * @return value of DateTime
	 */
	public final java.util.Date getDateTime(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.DateTime.toString());
	}

	/**
	 * Set value of DateTime
	 * @param datetime
	 */
	public final void setDateTime(java.util.Date datetime)
	{
		setDateTime(getContext(), datetime);
	}

	/**
	 * Set value of DateTime
	 * @param context
	 * @param datetime
	 */
	public final void setDateTime(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date datetime)
	{
		getMendixObject().setValue(context, MemberNames.DateTime.toString(), datetime);
	}

	/**
	 * @return value of DataPointNP_SerieNP
	 */
	public final java.util.List<charts.proxies.SerieNP> getDataPointNP_SerieNP() throws com.mendix.core.CoreException
	{
		return getDataPointNP_SerieNP(getContext());
	}

	/**
	 * @param context
	 * @return value of DataPointNP_SerieNP
	 */
	@SuppressWarnings("unchecked")
	public final java.util.List<charts.proxies.SerieNP> getDataPointNP_SerieNP(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		java.util.List<charts.proxies.SerieNP> result = new java.util.ArrayList<charts.proxies.SerieNP>();
		Object valueObject = getMendixObject().getValue(context, MemberNames.DataPointNP_SerieNP.toString());
		if (valueObject == null)
			return result;
		for (com.mendix.systemwideinterfaces.core.IMendixObject mendixObject : com.mendix.core.Core.retrieveIdList(context, (java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier>) valueObject))
			result.add(charts.proxies.SerieNP.initialize(context, mendixObject));
		return result;
	}

	/**
	 * Set value of DataPointNP_SerieNP
	 * @param datapointnp_serienp
	 */
	public final void setDataPointNP_SerieNP(java.util.List<charts.proxies.SerieNP> datapointnp_serienp)
	{
		setDataPointNP_SerieNP(getContext(), datapointnp_serienp);
	}

	/**
	 * Set value of DataPointNP_SerieNP
	 * @param context
	 * @param datapointnp_serienp
	 */
	public final void setDataPointNP_SerieNP(com.mendix.systemwideinterfaces.core.IContext context, java.util.List<charts.proxies.SerieNP> datapointnp_serienp)
	{
		java.util.List<com.mendix.systemwideinterfaces.core.IMendixIdentifier> identifiers = new java.util.ArrayList<com.mendix.systemwideinterfaces.core.IMendixIdentifier>();
		for (charts.proxies.SerieNP proxyObject : datapointnp_serienp)
			identifiers.add(proxyObject.getMendixObject().getId());
		getMendixObject().setValue(context, MemberNames.DataPointNP_SerieNP.toString(), identifiers);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return dataPointNPMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final charts.proxies.DataPointNP that = (charts.proxies.DataPointNP) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Charts.DataPointNP";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
