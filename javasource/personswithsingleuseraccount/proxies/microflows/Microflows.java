// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package personswithsingleuseraccount.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the PersonsWithSingleUserAccount module
	public static void act_Person_ShowMyPerson(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("PersonsWithSingleUserAccount.Act_Person_ShowMyPerson").withParams(params).execute(context);
	}
	public static void act_UserAccount_Create(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("PersonsWithSingleUserAccount.Act_UserAccount_Create").withParams(params).execute(context);
	}
	public static void act_UserAccount_Delete(IContext context, system.proxies.User _user)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("User", _user == null ? null : _user.getMendixObject());
		Core.microflowCall("PersonsWithSingleUserAccount.Act_UserAccount_Delete").withParams(params).execute(context);
	}
	public static boolean bCo_Person_OnlyAllowOnePersonPerUser(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("PersonsWithSingleUserAccount.BCo_Person_OnlyAllowOnePersonPerUser").withParams(params).execute(context);
	}
	public static personswithsingleuseraccount.proxies.ProfileImage dS_IdPhoto_GetOrCreate(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("PersonsWithSingleUserAccount.DS_IdPhoto_GetOrCreate").withParams(params).execute(context);
		return result == null ? null : personswithsingleuseraccount.proxies.ProfileImage.initialize(context, result);
	}
	public static system.proxies.User dS_Person_GetUserAccount(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("PersonsWithSingleUserAccount.DS_Person_GetUserAccount").withParams(params).execute(context);
		return result == null ? null : system.proxies.User.initialize(context, result);
	}
	public static personswithsingleuseraccount.proxies.SocialMedia dS_SocialMedia_GetOrCreate(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		IMendixObject result = (IMendixObject)Core.microflowCall("PersonsWithSingleUserAccount.DS_SocialMedia_GetOrCreate").withParams(params).execute(context);
		return result == null ? null : personswithsingleuseraccount.proxies.SocialMedia.initialize(context, result);
	}
	public static void person_CheckExistenceUserAccount(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("PersonsWithSingleUserAccount.Person_CheckExistenceUserAccount").withParams(params).execute(context);
	}
	public static personswithsingleuseraccount.proxies.Person person_GetFromCurrentUserAccount(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("PersonsWithSingleUserAccount.Person_GetFromCurrentUserAccount").withParams(params).execute(context);
		return result == null ? null : personswithsingleuseraccount.proxies.Person.initialize(context, result);
	}
	public static void person_Save(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("PersonsWithSingleUserAccount.Person_Save").withParams(params).execute(context);
	}
	public static void person_ShowPage_NewEdit(IContext context, personswithsingleuseraccount.proxies.Person _person)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Person", _person == null ? null : _person.getMendixObject());
		Core.microflowCall("PersonsWithSingleUserAccount.Person_ShowPage_NewEdit").withParams(params).execute(context);
	}
	public static personswithsingleuseraccount.proxies.Person userAccount_GetCurrentPersonFromCurrentUser(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		IMendixObject result = (IMendixObject)Core.microflowCall("PersonsWithSingleUserAccount.UserAccount_GetCurrentPersonFromCurrentUser").withParams(params).execute(context);
		return result == null ? null : personswithsingleuseraccount.proxies.Person.initialize(context, result);
	}
}