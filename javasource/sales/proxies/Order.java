// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package sales.proxies;

public class Order
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject orderMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Sales.Order";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		TotalPrice("TotalPrice"),
		Date("Date"),
		IsPaid("IsPaid"),
		Order_Customer("Sales.Order_Customer"),
		Order_Address("Sales.Order_Address");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Order(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Sales.Order"));
	}

	protected Order(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject orderMendixObject)
	{
		if (orderMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Sales.Order", orderMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Sales.Order");

		this.orderMendixObject = orderMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Order.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static sales.proxies.Order initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return sales.proxies.Order.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static sales.proxies.Order initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new sales.proxies.Order(context, mendixObject);
	}

	public static sales.proxies.Order load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return sales.proxies.Order.initialize(context, mendixObject);
	}

	public static java.util.List<sales.proxies.Order> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<sales.proxies.Order> result = new java.util.ArrayList<sales.proxies.Order>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Sales.Order" + xpathConstraint))
			result.add(sales.proxies.Order.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of TotalPrice
	 */
	public final java.math.BigDecimal getTotalPrice()
	{
		return getTotalPrice(getContext());
	}

	/**
	 * @param context
	 * @return value of TotalPrice
	 */
	public final java.math.BigDecimal getTotalPrice(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.math.BigDecimal) getMendixObject().getValue(context, MemberNames.TotalPrice.toString());
	}

	/**
	 * Set value of TotalPrice
	 * @param totalprice
	 */
	public final void setTotalPrice(java.math.BigDecimal totalprice)
	{
		setTotalPrice(getContext(), totalprice);
	}

	/**
	 * Set value of TotalPrice
	 * @param context
	 * @param totalprice
	 */
	public final void setTotalPrice(com.mendix.systemwideinterfaces.core.IContext context, java.math.BigDecimal totalprice)
	{
		getMendixObject().setValue(context, MemberNames.TotalPrice.toString(), totalprice);
	}

	/**
	 * @return value of Date
	 */
	public final java.util.Date getDate()
	{
		return getDate(getContext());
	}

	/**
	 * @param context
	 * @return value of Date
	 */
	public final java.util.Date getDate(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.util.Date) getMendixObject().getValue(context, MemberNames.Date.toString());
	}

	/**
	 * Set value of Date
	 * @param date
	 */
	public final void setDate(java.util.Date date)
	{
		setDate(getContext(), date);
	}

	/**
	 * Set value of Date
	 * @param context
	 * @param date
	 */
	public final void setDate(com.mendix.systemwideinterfaces.core.IContext context, java.util.Date date)
	{
		getMendixObject().setValue(context, MemberNames.Date.toString(), date);
	}

	/**
	 * @return value of IsPaid
	 */
	public final java.lang.Boolean getIsPaid()
	{
		return getIsPaid(getContext());
	}

	/**
	 * @param context
	 * @return value of IsPaid
	 */
	public final java.lang.Boolean getIsPaid(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Boolean) getMendixObject().getValue(context, MemberNames.IsPaid.toString());
	}

	/**
	 * Set value of IsPaid
	 * @param ispaid
	 */
	public final void setIsPaid(java.lang.Boolean ispaid)
	{
		setIsPaid(getContext(), ispaid);
	}

	/**
	 * Set value of IsPaid
	 * @param context
	 * @param ispaid
	 */
	public final void setIsPaid(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Boolean ispaid)
	{
		getMendixObject().setValue(context, MemberNames.IsPaid.toString(), ispaid);
	}

	/**
	 * @return value of Order_Customer
	 */
	public final sales.proxies.Customer getOrder_Customer() throws com.mendix.core.CoreException
	{
		return getOrder_Customer(getContext());
	}

	/**
	 * @param context
	 * @return value of Order_Customer
	 */
	public final sales.proxies.Customer getOrder_Customer(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sales.proxies.Customer result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Order_Customer.toString());
		if (identifier != null)
			result = sales.proxies.Customer.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Order_Customer
	 * @param order_customer
	 */
	public final void setOrder_Customer(sales.proxies.Customer order_customer)
	{
		setOrder_Customer(getContext(), order_customer);
	}

	/**
	 * Set value of Order_Customer
	 * @param context
	 * @param order_customer
	 */
	public final void setOrder_Customer(com.mendix.systemwideinterfaces.core.IContext context, sales.proxies.Customer order_customer)
	{
		if (order_customer == null)
			getMendixObject().setValue(context, MemberNames.Order_Customer.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Order_Customer.toString(), order_customer.getMendixObject().getId());
	}

	/**
	 * @return value of Order_Address
	 */
	public final sales.proxies.Address getOrder_Address() throws com.mendix.core.CoreException
	{
		return getOrder_Address(getContext());
	}

	/**
	 * @param context
	 * @return value of Order_Address
	 */
	public final sales.proxies.Address getOrder_Address(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		sales.proxies.Address result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Order_Address.toString());
		if (identifier != null)
			result = sales.proxies.Address.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Order_Address
	 * @param order_address
	 */
	public final void setOrder_Address(sales.proxies.Address order_address)
	{
		setOrder_Address(getContext(), order_address);
	}

	/**
	 * Set value of Order_Address
	 * @param context
	 * @param order_address
	 */
	public final void setOrder_Address(com.mendix.systemwideinterfaces.core.IContext context, sales.proxies.Address order_address)
	{
		if (order_address == null)
			getMendixObject().setValue(context, MemberNames.Order_Address.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Order_Address.toString(), order_address.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return orderMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final sales.proxies.Order that = (sales.proxies.Order) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Sales.Order";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
