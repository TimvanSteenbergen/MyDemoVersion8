// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package goodies.proxies;

/**
 * For trying Java action GenerateHMAC_SHA1
 */
public class HMACbySHA1
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject hMACbySHA1MendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Goodies.HMACbySHA1";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		key("key"),
		valueToEncode("valueToEncode"),
		ResultingHMAC("ResultingHMAC");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public HMACbySHA1(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Goodies.HMACbySHA1"));
	}

	protected HMACbySHA1(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject hMACbySHA1MendixObject)
	{
		if (hMACbySHA1MendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Goodies.HMACbySHA1", hMACbySHA1MendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Goodies.HMACbySHA1");

		this.hMACbySHA1MendixObject = hMACbySHA1MendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'HMACbySHA1.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static goodies.proxies.HMACbySHA1 initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return goodies.proxies.HMACbySHA1.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static goodies.proxies.HMACbySHA1 initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new goodies.proxies.HMACbySHA1(context, mendixObject);
	}

	public static goodies.proxies.HMACbySHA1 load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return goodies.proxies.HMACbySHA1.initialize(context, mendixObject);
	}

	public static java.util.List<goodies.proxies.HMACbySHA1> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<goodies.proxies.HMACbySHA1> result = new java.util.ArrayList<goodies.proxies.HMACbySHA1>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Goodies.HMACbySHA1" + xpathConstraint))
			result.add(goodies.proxies.HMACbySHA1.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of key
	 */
	public final java.lang.String getkey()
	{
		return getkey(getContext());
	}

	/**
	 * @param context
	 * @return value of key
	 */
	public final java.lang.String getkey(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.key.toString());
	}

	/**
	 * Set value of key
	 * @param key
	 */
	public final void setkey(java.lang.String key)
	{
		setkey(getContext(), key);
	}

	/**
	 * Set value of key
	 * @param context
	 * @param key
	 */
	public final void setkey(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String key)
	{
		getMendixObject().setValue(context, MemberNames.key.toString(), key);
	}

	/**
	 * @return value of valueToEncode
	 */
	public final java.lang.String getvalueToEncode()
	{
		return getvalueToEncode(getContext());
	}

	/**
	 * @param context
	 * @return value of valueToEncode
	 */
	public final java.lang.String getvalueToEncode(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.valueToEncode.toString());
	}

	/**
	 * Set value of valueToEncode
	 * @param valuetoencode
	 */
	public final void setvalueToEncode(java.lang.String valuetoencode)
	{
		setvalueToEncode(getContext(), valuetoencode);
	}

	/**
	 * Set value of valueToEncode
	 * @param context
	 * @param valuetoencode
	 */
	public final void setvalueToEncode(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String valuetoencode)
	{
		getMendixObject().setValue(context, MemberNames.valueToEncode.toString(), valuetoencode);
	}

	/**
	 * @return value of ResultingHMAC
	 */
	public final java.lang.String getResultingHMAC()
	{
		return getResultingHMAC(getContext());
	}

	/**
	 * @param context
	 * @return value of ResultingHMAC
	 */
	public final java.lang.String getResultingHMAC(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.ResultingHMAC.toString());
	}

	/**
	 * Set value of ResultingHMAC
	 * @param resultinghmac
	 */
	public final void setResultingHMAC(java.lang.String resultinghmac)
	{
		setResultingHMAC(getContext(), resultinghmac);
	}

	/**
	 * Set value of ResultingHMAC
	 * @param context
	 * @param resultinghmac
	 */
	public final void setResultingHMAC(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String resultinghmac)
	{
		getMendixObject().setValue(context, MemberNames.ResultingHMAC.toString(), resultinghmac);
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return hMACbySHA1MendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final goodies.proxies.HMACbySHA1 that = (goodies.proxies.HMACbySHA1) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Goodies.HMACbySHA1";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
