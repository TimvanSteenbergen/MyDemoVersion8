// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package deeplink.proxies.microflows;

import java.util.HashMap;
import java.util.Map;
import com.mendix.core.Core;
import com.mendix.core.CoreException;
import com.mendix.systemwideinterfaces.MendixRuntimeException;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;

public class Microflows
{
	// These are the microflows for the DeepLink module
	public static void aCT_AttributeSelect(IContext context, deeplink.proxies.Attribute _attribute, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Attribute", _attribute == null ? null : _attribute.getMendixObject());
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_AttributeSelect").withParams(params).execute(context);
	}
	public static void aCT_EntitySelect(IContext context, deeplink.proxies.Entity _entity, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Entity", _entity == null ? null : _entity.getMendixObject());
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_EntitySelect").withParams(params).execute(context);
	}
	public static void aCT_MicroflowSelect(IContext context, deeplink.proxies.Microflow _microflow, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Microflow", _microflow == null ? null : _microflow.getMendixObject());
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_MicroflowSelect").withParams(params).execute(context);
	}
	public static void aCT_ReloadMetaData(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_ReloadMetaData").withParams(params).execute(context);
	}
	public static void aCT_ShowEntitySelect(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_ShowEntitySelect").withParams(params).execute(context);
	}
	public static void aCT_ShowMicroflowSelect(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.ACT_ShowMicroflowSelect").withParams(params).execute(context);
	}
	public static boolean bCo_Deeplink_SetAttributes(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		return (java.lang.Boolean) Core.microflowCall("DeepLink.BCo_Deeplink_SetAttributes").withParams(params).execute(context);
	}
	public static void clearOldPendingLinks(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DeepLink.ClearOldPendingLinks").withParams(params).execute(context);
	}
	public static void createDeeplinkConfig(IContext context, java.lang.String _name, java.lang.String _microflow, java.lang.String _objectType, java.lang.String _objectAttr, boolean _allowGuests, boolean _useStringArg, boolean _useAsHome, java.lang.String _indexPage, boolean _includeGetParams, boolean _separateGetParams, boolean _objectAsParameter)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("Name", _name);
		params.put("Microflow", _microflow);
		params.put("ObjectType", _objectType);
		params.put("ObjectAttr", _objectAttr);
		params.put("AllowGuests", _allowGuests);
		params.put("UseStringArg", _useStringArg);
		params.put("UseAsHome", _useAsHome);
		params.put("IndexPage", _indexPage);
		params.put("IncludeGetParams", _includeGetParams);
		params.put("SeparateGetParams", _separateGetParams);
		params.put("ObjectAsParameter", _objectAsParameter);
		Core.microflowCall("DeepLink.CreateDeeplinkConfig").withParams(params).execute(context);
	}
	public static boolean deepLinkHome(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("DeepLink.DeepLinkHome").withParams(params).execute(context);
	}
	public static java.util.List<deeplink.proxies.Attribute> dS_Attribute(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		java.util.List<IMendixObject> objs = Core.microflowCall("DeepLink.DS_Attribute").withParams(params).execute(context);
		java.util.List<deeplink.proxies.Attribute> result = null;
		if (objs != null)
		{
			result = new java.util.ArrayList<>();
			for (IMendixObject obj : objs)
				result.add(deeplink.proxies.Attribute.initialize(context, obj));
		}
		return result;
	}
	public static void oCh_Name(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.OCh_Name").withParams(params).execute(context);
	}
	public static void showDeeplinkConfigurationOverview(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		Core.microflowCall("DeepLink.ShowDeeplinkConfigurationOverview").withParams(params).execute(context);
	}
	public static boolean startDeeplink(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.Boolean) Core.microflowCall("DeepLink.StartDeeplink").withParams(params).execute(context);
	}
	public static java.lang.String sUB_GetApplicationURL(IContext context)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		return (java.lang.String) Core.microflowCall("DeepLink.SUB_GetApplicationURL").withParams(params).execute(context);
	}
	public static void sUB_ReloadMetaData(IContext context, deeplink.proxies.DeepLink _deepLink)
	{
		Map<java.lang.String, Object> params = new HashMap<>();
		params.put("DeepLink", _deepLink == null ? null : _deepLink.getMendixObject());
		Core.microflowCall("DeepLink.SUB_ReloadMetaData").withParams(params).execute(context);
	}
}